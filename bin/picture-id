#! /usr/bin/env node
'use strict';

/**
 * A wrapper around the library.
 */

var pictureID = require('../lib/picture-id');
var packageJSON = require('../package.json');
var commandline = require('commander');

// Configuration for picture-id module so that we can build the command
// line options for these
var spacing = '\n                               ';
var configOptions = [
  {
    name: 'db',
    alias: 'b',
    input: '<file>',
    describe: 'Where to save the file that keeps track of the SSID. The ' +
      spacing + 'default is "' + pictureID.defaults.db + '".',
    default: pictureID.defaults.db
  },
  {
    name: 'directory',
    alias: 'd',
    input: '<directory>',
    describe: 'Where to save the images. The default is "' + pictureID.defaults.directory + '".',
    default: pictureID.defaults.directory
  },
  {
    name: 'filename',
    alias: 'n',
    input: '<filename>',
    describe: 'The name of the file to create with values ' +
      spacing + '{{YYYY}}, {{MM}}, {{DD}}, {{HH}}, {{II}}, {{SS}}, {{SSID}}. ' +
      spacing + 'Valid image types are JPEG, TIFF, PNG, GIF, BMP. The ' +
      spacing + 'default is "' + pictureID.defaults.filename + '".',
    default: pictureID.defaults.filename
  },
  {
    name: 'warmup',
    alias: 'w',
    input: '<n>',
    describe: 'The number of seconds to warmup the camera; the default camera ' +
      spacing + 'needs a couple seconds otherwise the picture will be very ' +
      spacing + 'dark. The default is "' + pictureID.defaults.warmup + '".',
    default: pictureID.defaults.warmup
  },
  {
    name: 'force',
    alias: 'f',
    describe: 'Forces picture to be taken regardless of a change of SSID.'
  },
  {
    name: 'no-location',
    alias: 'L',
    describe: 'Do not attempt to add location to image. Location information ' +
      spacing + 'is only added to .jpg files.'
  }
];

// Set up global command line options
commandline
  .version(packageJSON.version);

// Add config
configOptions.forEach(function(o) {
  commandline.option(
    '-' + o.alias + ', --' + o.name + ((o.input) ? ' ' + o.input : ''),
    o.describe,
    o.check,
    o.default
  );
});

// Parse options
commandline.parse(process.argv);

// Run picture id command
pictureID({
  db: commandline.db,
  directory: commandline.directory,
  filename: commandline.filename,
  warmup: (commandline.warmup || commandline.warmup === '0') ?
    parseInt(commandline.warmup, 10) : commandline.warmup,
  force: !!commandline.force,
  location: !!commandline.location
});
